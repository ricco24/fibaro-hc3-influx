#!/usr/bin/env php
<?php

require_once __DIR__ . '/../vendor/autoload.php';
$config = require_once __DIR__ . '/../../shared/config/config.php';

$storage = new \F3ILog\Storage\NullStorage();
if ($config['storage']['type'] === 'file') {
    $storage = new \F3ILog\Storage\FileStorage(__DIR__ . '/../' . $config['storage']['directory']);
}

$influxDatabase = getInfluxDatabase($config['influx']);
$hcClient = getHCClient($config['hc']);
$logEventsCommand = new \F3ILog\Command\LogEventsCommand($influxDatabase, $hcClient, $storage);
$logConsumptionCommand = new \F3ILog\Command\LogConsumptionCommand($influxDatabase, $hcClient, $storage, $config['commands']['consumption']['devices']);

$app = new \Symfony\Component\Console\Application();
$app->add($logEventsCommand);
$app->add($logConsumptionCommand);
$app->run();

function getInfluxDatabase(array $influxConfig)
{
    $influx = new \InfluxDB\Client(
        $influxConfig['host'],
        $influxConfig['port'],
        $influxConfig['username'],
        $influxConfig['password'],
        $influxConfig['ssl'],
        $influxConfig['verifySSL'],
        $influxConfig['timeout'],
        $influxConfig['connectTimeout']
    );
    return $influx->selectDB($influxConfig['database']);
}

function getHCClient(array $hcConfig)
{
    return new F3ILog\HCClient\HCClient(
            $hcConfig['url'],
            $hcConfig['username'],
            $hcConfig['password'],
            $hcConfig['verifySSL']
    );
}